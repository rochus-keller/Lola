#ifndef __LL_SYNTREE__
#define __LL_SYNTREE__
// This file was automatically generated by EbnfStudio; don't modify it!

#include <Lola/LlTokenType.h>
#include <Lola/LlToken.h>
#include <QList>

namespace Ll {

	struct SynTree {
		enum ParserRule {
			R_First = TT_Max + 1,
			R_ConstDeclaration,
			R_Lola2,
			R_ModuleType,
			R_SimpleType,
			R_StatementSequence,
			R_TSgate,
			R_TypeDeclaration,
			R_VarRegDeclaration,
			R_assignment,
			R_assignment_or_instantiation,
			R_comment,
			R_constructor,
			R_control,
			R_designator,
			R_element,
			R_expression,
			R_factor,
			R_input,
			R_instantiation,
			R_iogate,
			R_module,
			R_output,
			R_paramlist,
			R_selector,
			R_simpleExpr,
			R_statement,
			R_term,
			R_type,
			R_uncondExpr,
			R_unit,
			R_variable,
			R_varlist,
			R_Last
		};
		SynTree(quint16 r = Tok_Invalid, const Token& = Token() );
		SynTree(const Token& t ):d_tok(t){}
		~SynTree() { foreach(SynTree* n, d_children) delete n; }

		static const char* rToStr( quint16 r );

		Ll::Token d_tok;
		QList<SynTree*> d_children;
	};

}
#endif // __LL_SYNTREE__
